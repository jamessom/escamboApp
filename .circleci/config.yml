# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/ruby:2.7.2-browsers
        environment:
          RAILS_ENV: test
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: root
          DATABASE_PREFIX: escamboapp
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: escamboapp_test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs $(nproc) --retry 3

      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      # Database setup
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-9.6
      - run: export RAILS_ENV=test
      - run: bundle exec rake db:schema:load
      - run: bundle exec rake db:migrate

      # run tests!
      - run:
          name: run tests
          command: |
            bundle exec rails test

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results